/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import org.apache.commons.net.ftp.*;
import java.util.*;
import java.io.*;
import javax.swing.*;

/**
 *
 * @author Student
 */
public class FtpCLient extends javax.swing.JFrame {

    /**
     * Creates new form FtpCLient
     */
    public FTPClient ftp;

    public FtpCLient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ip = new javax.swing.JTextField();
        uname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        connect = new javax.swing.JButton();
        disconnect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusWin = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        list_files = new javax.swing.JButton();
        list_folders = new javax.swing.JButton();
        download = new javax.swing.JButton();
        upload = new javax.swing.JButton();
        change_directory = new javax.swing.JButton();
        go_to_parent_directory = new javax.swing.JButton();
        pwd = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ip.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        uname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("IP");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Login");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Password");

        connect.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        connect.setText("CONNECT");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        disconnect.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        disconnect.setText("DISCONNECT");
        disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectActionPerformed(evt);
            }
        });

        statusWin.setEditable(false);
        statusWin.setColumns(20);
        statusWin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        statusWin.setLineWrap(true);
        statusWin.setRows(5);
        statusWin.setWrapStyleWord(true);
        jScrollPane1.setViewportView(statusWin);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Operations:-");

        comboBox.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setText("Login");

        login.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("Status Window");

        list_files.setText("List Files");
        list_files.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_filesActionPerformed(evt);
            }
        });

        list_folders.setText("List Folders");
        list_folders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_foldersActionPerformed(evt);
            }
        });

        download.setText("Download");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        upload.setText("Upload");
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });

        change_directory.setText("Change Directory");
        change_directory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_directoryActionPerformed(evt);
            }
        });

        go_to_parent_directory.setText("Go To Parent Directory");
        go_to_parent_directory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go_to_parent_directoryActionPerformed(evt);
            }
        });

        pwd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(uname, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                            .addComponent(ip, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                            .addComponent(pwd))
                                        .addGap(61, 61, 61))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(login)
                                        .addGap(82, 82, 82)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(disconnect))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(go_to_parent_directory, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(list_files, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(list_folders, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(download, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(upload, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(change_directory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))
                                        .addGap(70, 70, 70)
                                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel10)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(connect)
                        .addComponent(disconnect))
                    .addComponent(jLabel1))
                .addGap(19, 19, 19)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(login)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(list_files))
                .addGap(18, 18, 18)
                .addComponent(list_folders)
                .addGap(18, 18, 18)
                .addComponent(download)
                .addGap(18, 18, 18)
                .addComponent(upload)
                .addGap(18, 18, 18)
                .addComponent(change_directory)
                .addGap(18, 18, 18)
                .addComponent(go_to_parent_directory)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void change_directoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_directoryActionPerformed
        // TODO add your handling code here:

        try {
            for (FTPFile f : ftp.listFiles()) {
                if (f.getName().equals((String) comboBox.getSelectedItem())) {
                    if (f.isFile()) {
                        statusWin.append("\nThe Given Path is not a directory....\n");
                    } 
                    else {
                        ftp.changeWorkingDirectory((String) comboBox.getSelectedItem());
                        comboBox.removeAllItems();
                        statusWin.append("\nWorking Directory :" + ftp.printWorkingDirectory());

                    }
                }
            }

        } catch (Exception e) {
            System.out.println("\nAn Exception Occured while changing directory" + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_change_directoryActionPerformed

    private void go_to_parent_directoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go_to_parent_directoryActionPerformed
        // TODO add your handling code here:
        try {
            if (ftp.changeToParentDirectory()) {
                statusWin.append("\nWorking Directory Changed to Parent Directory Successfully:-\n" + "Working Directory" + ftp.printWorkingDirectory());
            } else {
                statusWin.append("\nChange Directory Unsuccessful\n");
            }
        } catch (Exception e) {
            System.out.println("\nAn Exception Occured while changing to parent directory");
            e.printStackTrace();
        }


    }//GEN-LAST:event_go_to_parent_directoryActionPerformed

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        // TODO add your handling code here:
        ftp = new FTPClient();
        String ipaddr = ip.getText();
        try {
            ftp.connect(ipaddr);
        } catch (Exception e) {
            statusWin.append("\nCannot Connect To " + ipaddr + "\n" + e.getMessage());
        }

        Integer replyCode = ftp.getReplyCode();
        if (FTPReply.isPositiveCompletion(replyCode)) {
            statusWin.append("\nConnection Established Successfully ");
        } else {
            statusWin.append("\nConnection cannot be Established ");
        }
    }//GEN-LAST:event_connectActionPerformed

    private void disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectActionPerformed
        // TODO add your handling code here:
        try {
            ftp.disconnect();
            statusWin.append("\n Disconnected to " + ip.getText());
        } catch (Exception e) {
            System.out.println("\nAn Exception Occured while disconnecting");
            e.printStackTrace();
        }

    }//GEN-LAST:event_disconnectActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        String un = uname.getText();
        String p = pwd.getPassword().toString();
        try {
            if (ftp.login(un, p)) {
                statusWin.append("\nLogged in to " + un);
                statusWin.append("\n\nWorking Directory is:- " + ftp.printWorkingDirectory());
            } else {
                statusWin.append("Cannot Login to " + un);
            }

        } catch (Exception e) {
            System.out.println("\nAn Exception Occured while logging into the " + un);
            e.printStackTrace();
        }

    }//GEN-LAST:event_loginActionPerformed

    private void list_filesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_filesActionPerformed
        // TODO add your handling code here:
        comboBox.removeAllItems();
        try {
            for (FTPFile f : ftp.listFiles()) {
                if (f.isFile()) {
                    comboBox.addItem(f.getName());
                }
            }
            if(comboBox.getItemCount()==0)
            {
                comboBox.addItem("\nNO FILES FOUND");
            }

        } catch (Exception e) {
            System.out.println("An Exception Occuren while parsing the ftp files");
            e.printStackTrace();
        }


    }//GEN-LAST:event_list_filesActionPerformed

    private void list_foldersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_foldersActionPerformed
        // TODO add your handling code here:
        comboBox.removeAllItems();
        try {
            for (FTPFile f : ftp.listFiles()) {
                if (f.isDirectory()) {
                    comboBox.addItem(f.getName());
                }
            }
            if(comboBox.getItemCount()==0)
            {
                comboBox.addItem("\nNO FOLDERS FOUND");
            }

        } catch (Exception e) {
            System.out.println("An Exception Occuren while parsing the ftp folders");
            e.printStackTrace();
        }


    }//GEN-LAST:event_list_foldersActionPerformed

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        // TODO add your handling code here:
        String filename = (String) comboBox.getSelectedItem();
        File f = new File(filename);
        try {

            BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(f));
            if (ftp.retrieveFile(filename, bos)) {
                statusWin.append("\nFile " + filename + " downloaded successfully");
            } else {
                statusWin.append("\nUnable to download the file " + filename);
            }
            bos.close();

        } catch (Exception e) {
            System.out.println("\nAn Error Occured while creating BufferedOutputStream/FileOutputStream");
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_downloadActionPerformed

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
        // TODO add your handling code here:
        JFileChooser fileDialog = new JFileChooser();
        int status = fileDialog.showDialog(this, null);
        try {
            if (status == JFileChooser.APPROVE_OPTION) {
                File f = fileDialog.getSelectedFile();
                BufferedInputStream is = new BufferedInputStream(new FileInputStream(f));
                String fileName = f.getName();
                if (ftp.storeFile(fileName, is)) {
                    statusWin.append("\nFile successfully uploaded\n");
                } else {
                    statusWin.append("\nFile upload unsuccessful\n");
                }
            } else {
                statusWin.append("\nFile Not Choosed\n");
            }
        } catch (Exception e) {
            System.out.println("An Exception Occured");
            e.printStackTrace();
        }


    }//GEN-LAST:event_uploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FtpCLient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FtpCLient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FtpCLient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FtpCLient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FtpCLient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton change_directory;
    private javax.swing.JComboBox comboBox;
    private javax.swing.JButton connect;
    private javax.swing.JButton disconnect;
    private javax.swing.JButton download;
    private javax.swing.JButton go_to_parent_directory;
    private javax.swing.JTextField ip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton list_files;
    private javax.swing.JButton list_folders;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField pwd;
    private javax.swing.JTextArea statusWin;
    private javax.swing.JTextField uname;
    private javax.swing.JButton upload;
    // End of variables declaration//GEN-END:variables
}
